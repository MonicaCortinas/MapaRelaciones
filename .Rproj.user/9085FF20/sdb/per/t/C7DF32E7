{
    "collab_server" : "",
    "contents" : "\nlibrary(readr)\n\n# compute new cnae (cs$CNAE, fus$CNAE, otri$CNAE)\n\ncnae2009 <- read_csv(\"D:/Dropbox/3_Planificacion/1-Comunicacion/1_Maparelaciones/0_mapaagosto/data/cnae2009.csv\", \n                    col_types = cols(CODINTEGR = col_skip(), \n                     COD_CNAE2009 = col_character(), X4 = col_skip(), \n                     X5 = col_skip()))\n\n#newcodes\n# cuatro cifras\n\ncnae4d<- cnae2009[which(nchar(cnae2009$COD_CNAE2009)==4),]\n\ncnae4d$grupocnae <- \n      ifelse (cnae4d$COD_CNAE2009 < 1000,\n            paste(\"0\",cnae4d$COD_CNAE2009, sep=\"\"),\n      (ifelse((cnae4d$COD_CNAE2009 >= 1000) & (cnae4d$COD_CNAE2009 < 1200), \n            paste(\"1\",cnae4d$COD_CNAE2009, sep=\"\"),\n      ifelse((cnae4d$COD_CNAE2009 >= 1200) & (cnae4d$COD_CNAE2009 < 2900), \n            paste(\"3\",cnae4d$COD_CNAE2009, sep=\"\"),\n      ifelse((cnae4d$COD_CNAE2009 >= 2900) & (cnae4d$COD_CNAE2009 < 3000), \n            paste(\"2\",cnae4d$COD_CNAE2009, sep=\"\"),\n      ifelse((cnae4d$COD_CNAE2009 >= 3000) & (cnae4d$COD_CNAE2009 < 3500), \n            paste(\"3\",cnae4d$COD_CNAE2009, sep=\"\"),\n      ifelse((cnae4d$COD_CNAE2009 >= 4110) & (cnae4d$COD_CNAE2009 < 4400), \n            paste(\"3\",cnae4d$COD_CNAE2009, sep=\"\"),\n      ifelse((cnae4d$COD_CNAE2009 >= 3500) & (cnae4d$COD_CNAE2009 < 4000), \n            paste(\"4\",cnae4d$COD_CNAE2009, sep=\"\"), \n      ifelse((cnae4d$COD_CNAE2009 >= 4500) & (cnae4d$COD_CNAE2009 <= 5630), \n            paste(\"5\",cnae4d$COD_CNAE2009, sep=\"\"),\n      ifelse((cnae4d$COD_CNAE2009 >= 5800) & (cnae4d$COD_CNAE2009 <= 8299), \n            paste(\"6\",cnae4d$COD_CNAE2009, sep=\"\"),       \n      ifelse((cnae4d$COD_CNAE2009 >= 9000) & (cnae4d$COD_CNAE2009 < 9330), \n            paste(\"6\",cnae4d$COD_CNAE2009, sep=\"\"), \n      ifelse((cnae4d$COD_CNAE2009 >= 8400) & (cnae4d$COD_CNAE2009 <= 8899), \n            paste(\"7\",cnae4d$COD_CNAE2009, sep=\"\"),       \n      ifelse((cnae4d$COD_CNAE2009 >=9400), \n            paste(\"7\",cnae4d$COD_CNAE2009, sep=\"\"),       0\n                    )))))))))))))\n\ncnae4d$nombregrupo <- \n      ifelse (cnae4d$COD_CNAE2009 < 1000,\n            paste(\"Sector primario y extracción\"),\n      ifelse((cnae4d$COD_CNAE2009 >= 1000) & (cnae4d$COD_CNAE2009 < 1200), \n            paste(\"Sector Industria-Alimentación\"),\n      ifelse((cnae4d$COD_CNAE2009 >= 1200) & (cnae4d$COD_CNAE2009 < 2900), \n            paste(\"Otra Industria y construcción\"),\n      ifelse((cnae4d$COD_CNAE2009 >= 2900) & (cnae4d$COD_CNAE2009 < 3000), \n            paste(\"Sector Industria_Motor\"),\n      ifelse((cnae4d$COD_CNAE2009 >= 3000) & (cnae4d$COD_CNAE2009 < 3500), \n            paste(\"Otra Industria y construcción\"),\n      ifelse((cnae4d$COD_CNAE2009 >= 4110) & (cnae4d$COD_CNAE2009 <= 4400), \n            paste(\"Otra Industria y construcción\"),\n      ifelse((cnae4d$COD_CNAE2009 >= 3500) & (cnae4d$COD_CNAE2009 <= 4000), \n            paste(\"Suministros y Energía\"), \n      ifelse((cnae4d$COD_CNAE2009 >= 4500) & (cnae4d$COD_CNAE2009 <= 5630), \n            paste(\"Comercio, Transporte, Hostelería\"),\n      ifelse((cnae4d$COD_CNAE2009 >= 5800) & (cnae4d$COD_CNAE2009 <= 8299), \n            paste(\"Servicios: Información, Artístico, Informática, Consultoría, Financieros\"),       \n      ifelse((cnae4d$COD_CNAE2009 >= 9000) & (cnae4d$COD_CNAE2009 < 9330), \n            paste(\"Servicios: Información, Artístico, Informática, Consultoría, Financieros\"), \n      ifelse((cnae4d$COD_CNAE2009 >= 8400) & (cnae4d$COD_CNAE2009 <= 8899), \n            paste(\"Admon. Pública, Educación, Asociaciones, Extraterrit\"),       \n      ifelse((cnae4d$COD_CNAE2009 >=9400), \n            paste(\"Admon. Pública, Educación, Asociaciones, Extraterrit\"), 0\n            ))))))))))))\nrm(cnae2009)\n# MAPA FUS\nfus <- read_csv(\"D:/Dropbox/3_Planificacion/1-Comunicacion/1_Maparelaciones/0_mapaagosto/data/Fus_Listado empresas.csv\", na=\"\",\n      locale = locale(asciify = TRUE))\n\nnames(fus)<-gsub(\" \", \"\", names(fus)) # Quitar espacios en blanco\n# Hay algunos códigos cnae de 3 cifras incorrectos\n# Los corregimos:\ncnae3<- fus[which(nchar(fus$CNAE_1)==3),] # Localiza códigos de 3 cifras\nfus[which(fus$CNAE_1==\"113\"),5]<-\"0113\"\nfus[which(fus$CNAE_1==\"161\"),5]<-\"0161\"\nfus[which(fus$CNAE_1==\"163\"),5]<-\"6201\"\nfus[which(fus$CNAE_1==\"729\"),5]<-\"0729\"\nrm(cnae3)\n\nlength(table(fus$Name)) #Comprobamos que cada fila es una empresa\n\n# Completa los códigos\nfor (i in 1:length(fus$No_)) {\n      fus[i, 11]<- cnae4d[grep(as.numeric(fus[i,5]),cnae4d$grupocnae),3]\n      }\n\n# Añade el nombre\nfor (i in 1:length(fus$No_)) {\n      fus[i, 12]<- cnae4d[grep(as.numeric(fus[i,5]),cnae4d$grupocnae),4]\n}\nfus$grupocnae <- as.numeric(fus$grupocnae)\n\n# Para hacer el gráfico\n# \"poner en formato largo\"\nlibrary(tidyr)\nfus$No_ <- factor(fus$No_)\nfus_long <- gather(fus, tipo, convenios, Prácticascurriculares2016:Selecciones2016EmpleooTrabajo, \n                   factor_key=TRUE)\nfus_long$tipo<- factor(fus_long$tipo, labels=c(\"Pract. Curriculares\", \"Pract. Extracurriculares\",\"Proceso Selección\" ))\n\n# Variable X: grupocnae\n# Variable Y: convenios\n# facets: tipo\n# size: Ingresos2016\n# https://plot.ly/r/getting-started/\n\nlibrary(devtools)\n# devtools::install_github(\"ropensci/plotly\")\nlibrary(plotly)\nlibrary(\"ggsci\")\nSys.setenv(\"plotly_username\"=\"mcortinas\")\nSys.setenv(\"plotly_api_key\"=\"yJb8VBxhRqDRAOesNWRT\")\nSys.setlocale(\"LC_CTYPE\",\"spanish\")\np <- ggplot(fus_long, aes(x = grupocnae, y = convenios)) +\n      geom_point(aes(size = Ingresos2016, color=tipo, marker=list(alpha=3/4), text = paste(\"Nombre:\", fus_long$ALIAS))) +\n      labs( title=\"Mapa de Relaciones FUS\" , subtitle = NULL) +\n      scale_y_continuous(name=\"Número de Convenios\", limits=c(0,70), breaks=c(5,10,15,20, 40,70))+\n      scale_x_continuous(name=\"Sector\", limits=c(0,80000), breaks=c(500,12000,22000,32000, 43000,54000,66000,78000),\n                         labels=c(\"Sector primario y extracción\", \"Sector Industria-Alimentación\", \"Sector Industria_Motor\",\n                                  \"Otra Industria y construcción\", \"Suministros y Energía\", \"Comercio, Transporte, Hostelería\",\n                                  \"Servicios: Banca, Informática, Consultoría...\",\n                                  \"Admon. Pública, Educación...\"))+\n      scale_color_startrek()+\n      theme_bw()\n\ngg <- ggplotly(p)\nl <- list(\n      font = list(\n            family = \"sans-serif\",\n            size = 16,\n            color = \"#000\"),\n      x = 0.05, \n      y = 0.95, \n      orientation = 'h',\n      bordercolor = \"#E2E2E2\",\n      borderwidth = 2)\n\nl2 <- list(source = \"http://www.unavarra.es/css/bitmaps/upna30-iberus.png?raw=true\",\n           xref = \"x\",\n           yref = \"y\",\n           x = 0.9,\n           y = 3.1,\n           sizex = 2,\n           sizey = 2,\n           sizing = \"stretch\",\n           opacity = 0.4,\n           layer = \"below\"\n)\n\n      \nlayout(gg, legend = l, images = l2)\n\n\n# Mapa OTRI\nlibrary(dplyr)\notri <- read_csv(\"data/Otri con cnae.csv\", \n                 locale = locale(asciify = TRUE), na = \"empty\")\n\n# Hay algunos códigos cnae de 3 cifras incorrectos\n# Los corregimos:\ncnae3<- otri[which(nchar(otri$CNAE)==3),] # Localiza códigos de 3 cifras\notri[which(otri$CNAE==\"121\"),6]<-\"0121\"\nrm(cnae3)\nnames(otri)<-gsub(\" \", \"\", names(otri)) # Quitar espacios en blanco\nlength(table(otri$CIF)) #Comprobamos que cada fila es una empresa: no lo es\n\ningresos <- aggregate(formula = otri$ImportesinIVA ~ otri$CIF+otri$Tipocontrato, FUN = sum)\nnombre <- aggregate(formula = otri$Nombreentidad ~ otri$CIF+otri$Tipocontrato, FUN = last)\ncaracter <- aggregate(formula = otri$Caracter ~ otri$CIF+otri$Tipocontrato, FUN = last)\ncnae <- aggregate(formula = otri$CNAE ~ otri$CIF+otri$Tipocontrato, FUN = last)\nambito <- aggregate(formula = otri$Ambito ~ otri$CIF+otri$Tipocontrato, FUN = last)\n\notri_empresa <- cbind.data.frame(nombre[,1:3], cnae[,3], ingresos[,3], \n                                 caracter[,3],ambito[,3], stringsAsFactors = FALSE )\nnames(otri_empresa)<- c(\"cif\", \"tipo\", \"nombre\", \"cnae\", \"ingresos\", \"caracter\", \"ambito\")\n\nrm(ingresos, nombre, caracter, cnae, ambito)\n\n\n# Completa los códigos\nfor (i in 1:length(otri_empresa$cif)) {\n      otri_empresa[i, 8]<- cnae4d[grep(as.numeric(otri_empresa[i,4]),cnae4d$grupocnae),3]\n}\n\n\nfor (i in 1:length(otri_empresa$cif)) {\n      otri_empresa[i, 9]<- cnae4d[grep(as.numeric(otri_empresa[i,4]),cnae4d$grupocnae),4]\n}\n\notri_empresa$grupocnae <- as.numeric(otri_empresa$grupocnae)\n\n\n\n# Variable X: grupocnae\n# Variable Y: ingresos\n# facets: tipo\n# size: ambito\n# https://plot.ly/r/getting-started/\n\nlibrary(devtools)\n# devtools::install_github(\"ropensci/plotly\")\nlibrary(plotly)\nlibrary(\"ggsci\")\nSys.setenv(\"plotly_username\"=\"mcortinas\")\nSys.setenv(\"plotly_api_key\"=\"yJb8VBxhRqDRAOesNWRT\")\n\np <- ggplot(otri_empresa, aes(x = grupocnae, y = ingresos)) +\n      geom_point(aes(size = ingresos, color=tipo, alpha=3/4, text = paste(\"Nombre:\", otri_empresa$nombre))) +\n      labs( title=\"Mapa de Relaciones OTRI\" , subtitle = NULL) +\n      scale_y_continuous(name=\"Ingresos\",breaks=c(0, 5000,10000,20000,50000, 100000, 150000),\n                         labels=paste(c(0, 5000,10000,20000,50000, 120000, 150000),\"\\U20AC\", sep=\"\"))+\n      scale_x_continuous(name=\"Sector\", limits=c(0,80000), breaks=c(500,12000,22000,32000, 43000,54000,66000,78000),\n                         labels=c(\"Sector primario y extracción\", \"Sector Industria-Alimentación\", \"Sector Industria_Motor\",\n                                  \"Otra Industria y construcción\", \"Suministros y Energía\", \"Comercio, Transporte, Hostelería\",\n                                  \"Servicios: Banca, Informática, Consultoría...\",\n                                  \"Admon. Pública, Educación...\"))+\n      scale_color_lancet()+\n      theme_bw()\n\ngg <- ggplotly(p)\nl <- list(\n      font = list(\n            family = \"sans-serif\",\n            size = 16,\n            color = \"#000\"),\n      x = 0.05, \n      y = 0.95, \n      orientation = 'h',\n      bordercolor = \"#E2E2E2\",\n      borderwidth = 2)\n\nl2 <- list(source = \"http://www.unavarra.es/css/bitmaps/upna30-iberus.png?raw=true\",\n           xref = \"x\",\n           yref = \"y\",\n           x = 0.9,\n           y = 3.1,\n           sizex = 2,\n           sizey = 2,\n           sizing = \"stretch\",\n           opacity = 0.4,\n           layer = \"below\"\n)\nlayout(gg, legend = l, images = l2)\n\n# Mapa Cs\ncs <- read_csv(\"data/ConsejoSocial_datosoriginales.csv\", \n               locale = locale(asciify = TRUE), na = \"empty\")\n# Hay algunos códigos cnae de 3 cifras incorrectos?\n\ncnae3<- cs[which(nchar(cs$CNAE)<4),] # Localiza códigos de 3 cifras\ncs[which(cs$CNAE==\"812\"),4]<-\"8121\"\nrm(cnae3)\nnames(cs)<- c(\"razon\", \"nombre\", \"cif\", \"cnae\", \"ntrabaj\", \n                        \"totaling\", \"ingUPNA\", \"tipo\", \"tipo_10\", \"contacto\", \"aclaraciones\")\nlength(table(cs$cif)) #Comprobamos que cada fila es una empresa: no lo es\n# hay bastantes perdidos: seleccionamos filas completas\ncs_completos<- cs[complete.cases(cs), ]\n\nlength(table(cs_completos$cif)) #Comprobamos que cada fila es una empresa: sí lo es\n\n# Completa los códigos\nfor (i in 1:length(cs_completos$cif)) {\n      cs_completos[i, 12]<- cnae4d[grep(as.numeric(cs_completos[i,4]),cnae4d$grupocnae),3]\n}\n\n\nfor (i in 1:length(cs_completos$cif)) {\n      cs_completos[i, 13]<- cnae4d[grep(as.numeric(cs_completos[i,4]),cnae4d$grupocnae),4]\n}\n\ncs_completos$grupocnae <- as.numeric(cs_completos$grupocnae)\n\ncs_completos$ingresos <- cs_completos$totaling/1000\n\n\n# Variable X: grupocnae\n# Variable Y: totaling\n# https://plot.ly/r/getting-started/\n\nlibrary(devtools)\n# devtools::install_github(\"ropensci/plotly\")\nlibrary(plotly)\nlibrary(\"ggsci\")\nSys.setenv(\"plotly_username\"=\"mcortinas\")\nSys.setenv(\"plotly_api_key\"=\"yJb8VBxhRqDRAOesNWRT\")\n\np <- ggplot(cs_completos, aes(x = grupocnae, y = ingresos)) +\n      geom_point(aes(size = ntrabaj, color=tipo, alpha=3/4, \n                     text = paste(\"Nombre:\", cs_completos$nombre))) +\n      labs( title=\"Mapa de Relaciones Consejo Social\" , subtitle = \"(Solo datos completos)\") +\n      scale_y_continuous(name=\"Ingresos (miles de euros)\")+\n      scale_x_continuous(name=\"Sector\", limits=c(0,80000), breaks=c(500,12000,22000,32000, 43000,54000,66000,78000),\n                         labels=c(\"Sector primario y extracción\", \"Sector Industria-Alimentación\", \"Sector Industria_Motor\",\n                                  \"Otra Industria y construcción\", \"Suministros y Energía\", \"Comercio, Transporte, Hostelería\",\n                                  \"Servicios: Banca, Informática, Consultoría...\",\n                                  \"Admon. Pública, Educación...\"))+\n      scale_color_lancet()+\n      theme_bw()\n\ngg <- ggplotly(p)\nl <- list(\n      font = list(\n            family = \"sans-serif\",\n            size = 16,\n            color = \"#000\"),\n      x = 0.05, \n      y = 0.95, \n      orientation = 'h',\n      bordercolor = \"#E2E2E2\",\n      borderwidth = 2)\n\nl2 <- list(source = \"http://www.unavarra.es/css/bitmaps/upna30-iberus.png?raw=true\",\n           xref = \"x\",\n           yref = \"y\",\n           x = 0.9,\n           y = 3.1,\n           sizex = 2,\n           sizey = 2,\n           sizing = \"stretch\",\n           opacity = 0.4,\n           layer = \"below\"\n      )\nlayout(gg, legend = l, images = l2)\n\n## MAPA GENERAL\n## Variables: nombre, cnae, grupo cnae, ingresos, tipo\n\n# datos fus\n   fus <- read_csv(\"data/Fus_Listado empresas.csv\", na=\"\",\n                locale = locale(asciify = TRUE))\n\n      names(fus)<-gsub(\" \", \"\", names(fus)) # Quitar espacios en blanco\n      cnae3<- fus[which(nchar(fus$CNAE_1)==3),] # Localiza códigos de 3 cifras\n      fus[which(fus$CNAE_1==\"113\"),5]<-\"0113\"\n      fus[which(fus$CNAE_1==\"161\"),5]<-\"0161\"\n      fus[which(fus$CNAE_1==\"163\"),5]<-\"6201\"\n      fus[which(fus$CNAE_1==\"729\"),5]<-\"0729\"\n      rm(cnae3)\n      length(table(fus$Name)) #Comprobamos que cada fila es una empresa\n      for (i in 1:length(fus$No_)) {\n            fus[i, 11]<- cnae4d[grep(as.numeric(fus[i,5]),cnae4d$grupocnae),3]\n      }\n      for (i in 1:length(fus$No_)) {\n            fus[i, 12]<- cnae4d[grep(as.numeric(fus[i,5]),cnae4d$grupocnae),4]\n      }\n      fus$grupocnae <- as.numeric(fus$grupocnae)\n      fus_general<- cbind.data.frame(fus$ALIAS, fus$CNAE_1, fus$grupocnae, fus$Ingresos2016,\n                                stringsAsFactors = FALSE )\n      fus_general$tipo<- c(\"FUS\")\n      names(fus_general) <- c(\"nombre\", \"cnae\", \"grupo\", \"ingresos\", \"tipo\")\n# Datos otri\n      otri <- read_csv(\"data/Otri con cnae.csv\", \n                       locale = locale(asciify = TRUE), na = \"empty\")\n      cnae3<- otri[which(nchar(otri$CNAE)==3),] # Localiza códigos de 3 cifras\n      otri[which(otri$CNAE==\"121\"),6]<-\"0121\"\n      rm(cnae3)\n      for (i in 1:length(otri$CIF)) {\n            otri[i, 30]<- cnae4d[grep(as.numeric(otri[i,6]),cnae4d$grupocnae),3]\n      }\n      for (i in 1:length(otri$CIF)) {\n            otri[i, 31]<- cnae4d[grep(as.numeric(otri[i,6]),cnae4d$grupocnae),4]\n      }\n      otri$grupocnae <- as.numeric(otri$grupocnae)\n      \n      names(otri)<-gsub(\" \", \"\", names(otri)) # Quitar espacios en blanco\n      length(table(otri$CIF)) #Comprobamos que cada fila es una empresa: no lo es\n      ingresos <- aggregate(formula = otri$ImportesinIVA ~ otri$CIF, FUN = sum)\n      nombre <- aggregate(formula = otri$Nombreentidad ~ otri$CIF, FUN = last)\n      caracter <- aggregate(formula = otri$Caracter ~ otri$CIF, FUN = last)\n      cnae <- aggregate(formula = otri$CNAE ~ otri$CIF, FUN = last)\n      ambito <- aggregate(formula = otri$Ambito ~ otri$CIF, FUN = last)\n      grupocnae<- aggregate(formula = otri$grupocnae ~ otri$CIF, FUN = last)\n      otri_general <- cbind.data.frame(nombre[,1:2], cnae[,2], ingresos[,2], \n                                       caracter[,2],ambito[,2],grupocnae[,2],  stringsAsFactors = FALSE )\n      otri_general <- otri_general[,c(2,3,7,4)]\n   \n      rm(ingresos, nombre, caracter, cnae, ambito,grupocnae)\n\n      otri_general$tipo<- c(\"OTRI\")\n      names(otri_general) <- c(\"nombre\", \"cnae\", \"grupo\", \"ingresos\", \"tipo\")   \n# datos cs\n      cs <- read_csv(\"data/ConsejoSocial_datosoriginales.csv\", \n                     locale = locale(asciify = TRUE), na = \"empty\")\n      # Hay algunos códigos cnae de 3 cifras incorrectos?\n\n      cnae3<- cs[which(nchar(cs$CNAE)<4),] # Localiza códigos de 3 cifras\n      cs[which(cs$CNAE==\"812\"),4]<-\"8121\"\n      rm(cnae3)\n      names(cs)<- c(\"razon\", \"nombre\", \"cif\", \"cnae\", \"ntrabaj\", \n                    \"totaling\", \"ingUPNA\", \"tipo\", \"tipo_10\", \"contacto\", \"aclaraciones\")\n      length(table(cs$cif)) #Comprobamos que cada fila es una empresa: no lo es\n      cs_completos<- cs[complete.cases(cs), ]\n      length(table(cs_completos$cif)) #Comprobamos que cada fila es una empresa: sí lo es\n      for (i in 1:length(cs_completos$cif)) {\n            cs_completos[i, 12]<- cnae4d[grep(as.numeric(cs_completos[i,4]),cnae4d$grupocnae),3]\n      }\n      for (i in 1:length(cs_completos$cif)) {\n            cs_completos[i, 13]<- cnae4d[grep(as.numeric(cs_completos[i,4]),cnae4d$grupocnae),4]\n      }\n      cs_completos$grupocnae <- as.numeric(cs_completos$grupocnae)\n      cs_completos$ingresos <- cs_completos$totaling/1000\n      cs_general <-  cs_completos[,c(2,4,12,14)]\n\n      cs_general$tipo<- c(\"CS\")\n      names(cs_general) <- c(\"nombre\", \"cnae\", \"grupo\", \"ingresos\", \"tipo\")      \n# CREAMOS EL ARCHIVO COMPLETO\nmapaupna <- rbind.data.frame(fus_general, otri_general, cs_general,  stringsAsFactors = FALSE )\nrm(fus_general, otri_general, cs_general)\n\n\n## MAPA\nlibrary(devtools)\n# devtools::install_github(\"ropensci/plotly\")\nlibrary(plotly)\nlibrary(\"ggsci\")\nSys.setenv(\"plotly_username\"=\"mcortinas\")\nSys.setenv(\"plotly_api_key\"=\"yJb8VBxhRqDRAOesNWRT\")\n\np <- ggplot(mapaupna, aes(x = grupo, y = ingresos)) +\n      geom_point(aes(size = ingresos, color=tipo, alpha=3/4, \n                     text = paste(\"Nombre:\", mapaupna$nombre))) +\n      labs( title=\"Mapa de Relaciones UPNA 2016\") +\n      scale_y_continuous(name=\"Ingresos (ingresos CS: facturación en mill\\U20AC)\")+\n      scale_x_continuous(name=\"Sector\", limits=c(0,80000), breaks=c(500,12000,22000,32000, 43000,54000,66000,78000),\n                         labels=c(\"Sector primario y extracción\", \"Sector Industria-Alimentación\", \"Sector Industria_Motor\",\n                                  \"Otra Industria y construcción\", \"Suministros y Energía\", \"Comercio, Transporte, Hostelería\",\n                                  \"Servicios: Banca, Informática, Consultoría...\",\n                                  \"Admon. Pública, Educación...\"))+\n      scale_color_lancet()+\n      theme_bw()\n\ngg <- ggplotly(p)\nl <- list(\n      font = list(\n            family = \"sans-serif\",\n            size = 16,\n            color = \"#000\"),\n      x = 0.05, \n      y = 0.95, \n      orientation = 'h',\n      bordercolor = \"#E2E2E2\",\n      borderwidth = 2)\n\nl2 <- list(source = \"http://www.unavarra.es/css/bitmaps/upna30-iberus.png?raw=true\",\n           xref = \"x\",\n           yref = \"y\",\n           x = 0.9,\n           y = 3.1,\n           sizex = 2,\n           sizey = 2,\n           sizing = \"stretch\",\n           opacity = 0.4,\n           layer = \"below\"\n)\nlayout(gg, legend = l, images = l2)\n\n",
    "created" : 1524324714760.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1152975989",
    "id" : "C7DF32E7",
    "lastKnownWriteTime" : 1524284920,
    "last_content_update" : 1524284920,
    "path" : "D:/Dropbox/2_ Investigacion/0_mapaagosto/procesingdata.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}